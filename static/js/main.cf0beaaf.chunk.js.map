{"version":3,"sources":["components/Toolbar.js","components/QRBox.js","components/TextBox.js","img/banner.svg","components/App.js","reportWebVitals.js","index.js"],"names":["Toolbar","className","this","props","hiddenClass","onClick","toggleHiddenClass","path","mdiQrcode","size","React","Component","QRBox","value","url","bgColor","fgColor","TextBox","handleCopy","bind","navigator","clipboard","writeText","message","onChange","emitMessage","mdiContentCopy","App","cookies","Cookies","state","roomID","getRoomID","socket","setState","window","history","pushState","document","title","conf","SELF_URL","date","Date","setFullYear","getFullYear","set","sameSite","secure","maxAge","getTime","roomIDParts","location","toString","split","roomIDURL","length","console","log","roomIDCookie","get","io","query","on","data","setRoomID","setMessage","event","target","emit","href","src","banner","width","alt","connect","SERVER_URL","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf0beaaf.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"../css/Toolbar.css\";\r\nimport Icon from '@mdi/react';\r\nimport { mdiQrcode } from '@mdi/js'; \r\n\r\nclass Toolbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='Toolbar'>\r\n          <button className={'ButtonToggleQR' + this.props.hiddenClass} onClick={this.props.toggleHiddenClass}><Icon path={mdiQrcode} size={1}/></button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport QRCode from 'react-qr-code';\r\nimport \"../css/QRBox.css\";\r\n\r\nclass QRBox extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className={'QRBox' + this.props.hiddenClass}>\r\n        <QRCode value={this.props.url} bgColor='#FFFFFF' fgColor='#444444'/>\r\n        <p>Scan the QR code to access the link.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QRBox;\r\n","import React from 'react';\r\nimport \"../css/TextBox.css\";\r\nimport Icon from '@mdi/react';\r\nimport { mdiContentCopy } from '@mdi/js'; \r\n\r\nclass TextBox extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.handleCopy = this.handleCopy.bind(this);\r\n  }\r\n\r\n  handleCopy() {\r\n    navigator.clipboard.writeText(this.props.message);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='TextBox'>\r\n        <textarea onChange={this.props.emitMessage} value={this.props.message} />\r\n        <div className='TextBoxButtons'>\r\n          <button className='ButtonCopy' onClick={this.handleCopy}><Icon path={mdiContentCopy} size={0.8}/> Copy</button>\r\n        </div>\r\n      </div>\r\n    );\r\n    \r\n  }\r\n}\r\n\r\nexport default TextBox;","export default __webpack_public_path__ + \"static/media/banner.edd50df5.svg\";","import React from 'react';\r\nimport \"../css/App.css\";\r\nimport Cookies from 'universal-cookie';\r\nimport { io } from 'socket.io-client';\r\nimport Toolbar from './Toolbar';\r\nimport QRBox from './QRBox';\r\nimport TextBox from './TextBox';\r\nimport banner from '../img/banner.svg';\r\nimport conf from '../conf.json';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n  super();\r\n    this.cookies = new Cookies();\r\n    this.state = {\r\n      message: '',\r\n      roomID: this.getRoomID(),\r\n      hiddenClass: ' Hidden',\r\n    };\r\n    this.socket = null;\r\n    this.emitMessage = this.emitMessage.bind(this);\r\n    this.toggleHiddenClass = this.toggleHiddenClass.bind(this);\r\n  }\r\n\r\n  toggleHiddenClass() {\r\n    if(this.state.hiddenClass === ' Hidden') \r\n      this.setState({hiddenClass: ''});\r\n    else\r\n      this.setState({hiddenClass: ' Hidden'});\r\n  }\r\n\r\n  setRoomID(roomID) {\r\n    this.setState({roomID: roomID});\r\n    window.history.pushState({}, document.title, conf.SELF_URL + '/#/' + roomID);\r\n\r\n    // Set cookies\r\n    let date = new Date();\r\n    date.setFullYear(date.getFullYear() + 1);\r\n    this.cookies.set('roomID', roomID, {\r\n      sameSite: 'none',\r\n      secure: true,\r\n      maxAge: date.getTime(),\r\n    });\r\n  }\r\n  getRoomID() {\r\n    /* Get roomID */\r\n    const roomIDParts = window.location.toString().split('/');\r\n    let roomIDURL = \"\";\r\n    if (roomIDParts.length === 6){\r\n      roomIDURL = roomIDParts[5];\r\n    }\r\n    console.log(roomIDURL);\r\n    let roomIDCookie = this.cookies.get('roomID');\r\n\r\n    /* Return with precedence */\r\n    if(roomIDURL !== '') {\r\n      return roomIDURL;\r\n    } else if (typeof(roomIDCookie) != 'undefined') {\r\n      return roomIDCookie;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  setMessage(message) { this.setState({ message: message }); }\r\n  \r\n  connect(url, roomID) {\r\n    const socket = io(url, {\r\n      query: { 'roomID': roomID }\r\n    });\r\n\r\n    socket.on('connected', (data) => {\r\n      this.setRoomID(data.roomID);\r\n      this.setMessage(data.message);\r\n    });\r\n\r\n    socket.on('update', (data) => {\r\n      this.setMessage(data);\r\n    });\r\n\r\n    return socket;\r\n  }\r\n\r\n  emitMessage(event) {\r\n    this.setState({message: event.target.value});\r\n    this.socket.emit('update', event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n      <Toolbar hiddenClass={this.state.hiddenClass} toggleHiddenClass={this.toggleHiddenClass}/>\r\n      <main>\r\n        <QRBox message={this.state.roomID} url={window.location.href} hiddenClass={this.state.hiddenClass}/>\r\n        <article>\r\n        <img className=\"Banner\" src={banner} width={600} alt=\"\" />\r\n        <TextBox emitMessage={this.emitMessage} message={this.state.message}/>\r\n        </article>\r\n      </main>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n  this.socket = this.connect(conf.SERVER_URL, this.getRoomID());\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}